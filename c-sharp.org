* What we learnt as a beginner:
* Understanding errors:
** "A namespace cannot directly contain members such as fields, methods or statements"
*** This happens when you put fields, methods or statements underneath namespace ... (instead of inside class ...)
* https://www.c-sharpcorner.com/article/asp-net-core-razor-pages-simple-login-using-entity-framework-database-first-app/
** .NET Core framework is more suited for distributed environment rather than single machines
** Because of this, there are 2 major concepts utilized heavily:
*** Service Oriented Architecture as .NET Microservices
*** Dependency Injection pattern
** This site is about Razor based asp.net login app
** entity database framework approach
** Shows other links for prerequisites to understand tutorial
** Create database with name db_corelogin, and use script (script is SQL creating login table with existing user login data, and store procedure (CREATE PROCEDURE??) to verify existing login information)
** create new .Net core web application project
** to use database context object using entity framework, use IDE NuGet feature to install library packages, such as Microsoft.EntityFrameworkCore.SqlServer
** using Package Manage Console, run the stated command to create a bunch of files under Models/DB directory
** Differences in asp.net mvc framework and .net core when using a database first approach:
*** cool graphical UI to: select table, store procedures and database objects and database context file are imported (entity framework).
*** use command to import database context, and write business logic (SQL queries etc..) inside database context file (.cs)
*** Login.cs is our our object class (kind like our Laravel model)
** create a Models/DB .cs file (LoginByUsernamePassword.cs) that is an object class for store procedure returning data
** create a Models/ .cs file (LoginViewModel.cs) which is a view model class (instead of ViewController?) attached to the target view
** create a Model/DB .cs file (db_coreloginContext.cs) that will override OnConfiguring to communicate with database engine, override OnModelCreating (instead of direct table query) with custom store procedure
* MonoGame
** Installation links:
*** https://www.mono-project.com/download/stable/#download-lin
*** https://www.mono-project.com/docs/getting-started/mono-basics/
**** to test installed tools
** .NET SDK is available for Ubuntu 18.04, installing lets us finally do the lechgu project below, (coz already tried without, and it doesnt work)
*** https://learn.microsoft.com/en-us/dotnet/core/install/linux-ubuntu-1804
** Im trying this first, if it works, ill write more
*** https://lechgu.github.io/posts/csharp-game-sat/
** What have I learned so far:
*** C sharp still sucks
* 
