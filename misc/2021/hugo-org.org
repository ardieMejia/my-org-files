* How does one go about installing Emacs/Spacemacs/Doom Emacs and what not?
** https://github.com/syl20bnr/spacemacs
** The only link you'll need to start using Spacemacs. 
** Basically the process to install all variants of Emacs are the same (even when they look completely different!). 
*** You install the base Emacs
*** You install the init/layer/whatnot (basically configuration file). This is where the real magic of Spacemacs (and Doom Emacs I suspect) happens, where your base program will read this config file everytime it starts, thereby producing a completely different program. 
*** This modification is highly robust (as you will discover that, if you accidentally deleted this config file, base Emacs will simply start as default classic and painful Emacs)
** My version of emacs is 25.3.2. I recommend you install something later than 25.1 to "get with the times". Just a suggestion.  
*** https://ubuntuhandbook.org/index.php/2017/04/install-emacs-25-ppa-ubuntu-16-04-14-04/
sudo add-apt-repository ppa:kelleyk/emacs
sudo apt-get update
sudo apt-get install emacs25 #--- Aahhhhhhh... much better, no errors so far
*** In fact, you should install above version 25
git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
*** This will clone that special config file
* Worth a short read (but understanding this might be tricky if youre alien to web templating shit)
** https://scripter.co/hugo-leaf-and-branch-bundles/
** leaf bundles are basically the entire of a single folder pretending to be a single entity aka a leaf. You turn this "on" by having an index.md file. (and all other files will be treated as resources, even .md files)
** branch bundles are folders pretending to be a group of entities aka branch (Or perhaps not pretending at all, since folders are already a "branch"). You turn this "on" by having a _index.md file. (only non-page files can be resources, such as image, pdf, etc.)
* What is ox-hugo mode?
** Well, before we even get into what is hugo mode. We need to at least be familiar with org mode. Arguably the most useful note taking software Ive ever come across. It is built inside Emacs, and this means many things:
*** A strong and decades old community
*** Like most of Emacs modes (modes is what Emacs "plugins" are called), most commonly used actions have keyboards, and are self-documenting. 
*** However, unlike most other modes, org-mode is such a useful mode for Emacs, that the benefit of learning org mode alone more than makes up for the effort learning the entire Emacs.
** Now assuming you are familiar with basic features of org-mode, such as folding and folding of headings/lists. The next thing to probably interest is org-modes ability to publish to other file formats. Formats such as PDF, ODT, text files, HTMLS, etc (PDF however will require some Latex setup outside of Emacs). When you attempt to publish to HTML, you will quickly discover limitations, the most obvious being a complete lack of CSS. 
** Here you have several options:
*** Repositories like [[https://github.com/fniessen/org-html-themes][this]] which provides a clean and beautiful look to your org-published site. From which you may minor modifications to the default CSS. 
*** Using ox-hugo, which opens up a completely new world of possible themes and structure to your website, from very simple to blog-quality level. 
* https://niklasfasching.github.io/go-org/#footnote-3
** Has some useful lesser known examples of ox-hugo syntax such as this (which shows exact syntax highlighting on the web):
#+INCLUDE: "./headlines.org" src org
* https://michaeljherold.com/articles/using-ox-hugo-without-duplication/
** Very cool mumbo-jumbo about minimal edit markdown file
* Buffers are cool
** https://smythp.com/emacs_buffers/
*** One of the best introductions to buffers, frames and windows. Unusual, tricky for beginners, but very intuitive once understood. Concepts that once understood can result lots of efficient workflow for writers and programmers alike
*** Perhaps another true advantage of Emacs, is the fact that for different formatting (such as switching between text, PHP, and C++), it uses a different mode. "mode" is what Emacs uses to hide and expose functionality, unlike other editors, this makes it possible for Emacs to have (literally) hundreds (I didnt count it, but it felt like 100s) without conflicting each other. Think of it as having both Illustrator and Powerpoint together in 1 program, where the keyboard shortcut Shift + Tab has a different meaning. Not that Emacs can do anything like Illustrator, but as an example, in Emacs you would turn "Illustrator-mode" to turn on different features (and hide all other features), and then you would turn on Powerpoint to turn on other features. This makes it possible and safe in Emacs to have (for example) 300 different features mapped to only 30 keyboard features. 
* yasnippet -> a templating system for Emacs
* 




