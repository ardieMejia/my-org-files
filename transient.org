#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="zoho_ticket.css" />
#+OPTIONS:  toc:nil num:nil ^:nil


* Reminder
** Remember what Chomsky said
*** societies ban certain discussions on purpose to  keep the illusion  of freedom of discussion going. 
*** Most reporters worth their salt, take their job as a mostly a joke. They know the illusion of freedom of speech
*** remember, you made the FUCKING d minor prelude??
* What to do today:
** We need to test duplicates of everything, but for now only FIDE ID
** Errors and exceptions:
*** lets learn how to handle errors [[https://www.digitalocean.com/community/tutorials/how-to-handle-errors-in-a-flask-application][here]]
*** [[https://docs.python.org/3/library/exceptions.html][built-in]] python exceptions
*** [[https://docs.sqlalchemy.org/en/20/core/exceptions.html][SQLalchemy core]] exceptions
** [[https://hyperskill.org/learn/step/36181][IMPORTANT]]
** Software Engineering:
*** [[https://softwareengineering.stackexchange.com/questions/252448/representation-of-a-question-mark-in-variable-names][predicate variable naming]]
** Downloading the event_members table as an excel
** date time object in flask sqlalchemy
** Write documentation for your event management system
** Social:
*** If you share your video to people who are not interested in your content, it will only kill it. When people click off your video within the first few seconds, the algorithm picks up this behaviour as your content being not engaging enough and will deprioritize it. Thats why you need to be smart about sharing and only do it in the right places such as facebook groups dedicated to your niche.
*** Post about SPOKESHAVE again, as Aaron says, you are a curator. so mention [[https://www.youtube.com/watch?v=nsi9kTmU5-0][Wright's]] project and Paul Sellers project.
** Read about GitGurdian and alternative tools that can help explore web vulnerabilities for idiots like me
** Mistakes we did, that we spnt a very long time to make the conditiaonl env loading work, is the "export" missing in bashrc. Why is an easy mistake to overlook?
*** So turns out bash doesnt automatically export environmnt variables to child processes
** Git:
*** the trick of git rm --cached -r env/ (also setting that in .gitignore)
*** Write it down somewhere
** Python:
*** What is this [[https://austinpoor.com/blog/plots-with-jinja][SVG]] experiment
*** Good [[https://www.peterspython.com/en/blog/sqlalchemy-using-cascade-deletes-to-delete-related-objects][link]] on Python Flask SQLalchemy on cascade-deletes. Especially note the "Database object deletes using ForeignKey ON DELETE CASCADE"
** Reading personal blogs is always cool. This ones about [[https://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/][Git]]
*** https://stackoverflow.com/questions/1911109/how-do-i-clone-a-specific-git-branch
** Its very important to be knowledgable on common practices of "deploying to production". So READ [[https://flask.palletsprojects.com/en/stable/tutorial/deploy/][THIS]]. Also, read on lots of [[https://flask.palletsprojects.com/en/stable/deploying/][CONCEPTS]]
** We are going to READ on FILE VALIDATION, COMMON skill:
*** https://imagekit.io/blog/how-to-upload-files-in-html/
*** https://www.pullrequest.com/blog/secure-file-uploads-in-flask-filtering-and-validation-techniques/
** The best way to read CSS frameworks, while learning an actual project in your real work, while also spending time doing your personal project, is to read all the documentation of several. Im currently reading both Bootstrap and Tailwind CSS. The frameworks come from different perspectives and opinions. And trying to get into the mind fo the guys who created the "language", means trying to think "what is the creator trying to convey", when reading all their documentations. 
** Think of a project to use with typst
*** Also write something about typst
** We are going to publish our site, either in render or fly.io
** Remember to move image files from Hanifas laptop during the meeting later.
** Store this link somewhere ([[https://www.svgrepo.com/vectors/please-check-your-input-invalid-input/][svgrepo]])
** Progress
*** write about how you successfully did flex properly (3 child divs). Also flex and grid-cols dont mix very well. Remember to note how you read repeatedly sources from Bootstrap and Tailwind docs to get a sense of  CSS logic. You also tried to memorize slightly tailwind CSS. 
*** Do you want to write about thinking in terms of context. 
** read about [[https://www.linkedin.com/pulse/power-css-organizing-data-rows-columns-shydra-murray-h8t9c/][Flexbox]] please and differences between [[https://pieces.app/blog/top-5-best-css-frameworks-for-responsive-web-design-in-2024][css frameworks]]
** from our phone link
** How we generate our SECRET_KEY for our Flask app
** Emacs:
*** Hydra, disable ALL buffer operations, except next-buffer moves. 
*** You like trying cool custom personalized Emacs el. This one is useful simpler bookmark, might help a lot in you html editing: [[https://github.com/joodland/bm][here]]
*** Hydra we need to change our my-mode-line-generic-1 function by using (car my-list1) instead of  'hydra-face-blue. So we create a list like (setq my-list1 '(eww-form-text 2)) an use (car my-list1) or (nth <some-num> my-list1)
*** we are professional, so we need to make Python SUBMIT to us. [[https://emacs.stackexchange.com/questions/3372/coloring-indentation-levels][Color diff indentation levels]]
*** we need another Hydra to ehsily go to other-window using (other-window 1)
*** [[https://zck.org/define-keymap][keymap]] very cool stuff
*** web-mode-element-wrap must be hydra-ed. We also need to auto-select a whole delimiter. But first try the stackoverflow templating engine trick.
*** we need to add web-mode content select to our hydra.
*** We need to learn this Emacs [[https://emacs.stackexchange.com/questions/23810/getting-proper-indentation-for-python-flask-templates][templating indent]] mode thingy
*** Hydra mode, buffer hydra, so far we have no use any of the "mark whole buffer", so we make yank and kill a main hydra
*** we forget completely about html-mode vs web-mode vs emmet-mode, instead we focus on how to create 
*** we are going to try to use enriched mode to color Emacs
*** I like Xah Lee's Emacs material online. But why is he charging his Xah HTML Mode for 32 US dollars? I guess it must be amazing, and he needs to eat. But it seems be against the spirit of Emacs open source, to keep it behind a paywall. Well, must be a work of art. So many praises online. (Im combining Emacs web-mode with many cool custom Hydra mode settings. Coz Im tired of hunting and looking around for html modes. And Emmet mode means memorizing a lot of stuff, its cool and short but too much to memorize. Amazing stuff, no need to type Ctrl-c Ctrl-e and such. Literal semicolon and some other keys. No need to hold down on keys. Every Emacs guy should eventually get his hands dirty with Hydra mode for even simple stupid stuff. Opens the door to many cool tricks)
** Store this cool [[https://www.andrewvillazon.com/move-data-to-db-with-sqlalchemy/][declarative_base]] link, coz we managed to make it work for bulk upload. Note how you dont need to remove your usual model in your class. The declarative_model simply maps your class with the existing table.
** override modus theme, a masterpiece theme according to 1 guy, into a [[https://github.com/idlip/haki/tree/haki][high contrast tasheme]]
** Store this [[https://yannesposito.com/posts/0020-cool-looking-org-mode/index.html][cool Emacs link]] somewhere
** Copy Hanifas key
** FB:
*** How do you guys fill your breaks between coding session? Or how do you guys spend your weekend or days away from computers? Some of you probably have lots of snacks for between sessions, some of you probably have lots of cider in your fridge. Maybe not so healthy. Any hobbies outside of programming you guys have? Or maybe a side project, but a prog lang so different, as to be unmarketable but you cant live without it? ----- Gone are the days I do heavy workouts, I can only manage hikes during the weekend: cheap, free and a chance to escape the grayness of buildings and roads. The mental gear shift is so great between coding and non-coding, that even for my hikes during the weekend I need some downtime by doing playing music or reading a book the whole night before hike, and a full day afterwards. ---- What about you guys? Any cool unusual hobbies youd like to share? I know this group wont dissapoint, some of you are great at focusing for hours on end, your hobbies have to be different 
*** I know some of you are not particular attached to the idea of writing for your own personal sake. In our world, the code itself is documentation. But I can never help feel childish and selfish when it comes to having something personal to write on. I have a personal diary which I write on my favourite piece of software. I find that it helps even when it comes to small stuff (like installing a piece of software, or creating a new repo). I find that it personally helps me with my personal hobbies too (as I have trouble separating between professional work and passionate side project). What setup do you guys have that helps with dealing with the complexity that comes with this job (and the complexity that comes from dealing with separating professional like and side projects). A diary? A knowledge manage system like Obsidian?
*** I guess one of the reason I struggled with frameworks for the longest time, is becoz the template "language" confused how i thnk of code "state" in general
** Post on LinkIn, you dontactually need a big project to practice using frameworks. Just start with a very simple selfish, even stupid idea. Many of the modern frameworks we have out there are quite progressive, meaning as long as you have some idea of good code organization, your stupid ( and big and creative) idea can be made gradually better. Dont be intimidated by all the naysayers out there. Or maybe that only happened to me. But frameworks can be applied gradually to your creative idea. So I tried it with the stupid idea of using Excel as a data base using this REPO as a base. It works, I carefully replace with little bits of Flask here and there.
#+begin_quote

You dont actually need to treat web frameworks with fear. I just only learnt this. Modern frameworks are quite progressive in their nature. This means as long as you have some idea of good code organization and abstraction. Your random, stupid, selfish, creative idea can progressively become better with time and patience. 

Thats what progressive means, when you read a few random articles that mentions the specific progressive of these frameworks.  

I experimented with the stupid and suspicious idea of using Excel as a database, and adding frameworks bit by bit, and borrowing code from this repo: 

https://github.com/AnthonyDjogan/Excel-Based-Employee-Management-System_Python-CRUD-Application/blob/main/Employee_Management_CRUD.py

And then progressively organizing and splitting code and CRUD in my own way. It works. Hahaha...

#+end_quote
** readng technical software/programming documentation for beginners requires a balance of conceptual and technical description.
** Read about Python docstring
** contact African guy again
** Social
*** Use ur existing fiverr clients to improve your stats in other platforms
*** Respond to the Daniel in Developer Kaki
*** Ask the chess guy for possible early fund, coz I kinda need it.
*** ISO for free theaded rod more than 2 feet at least and a few matching nuts
** Python project notes, jot down the folowing:
*** [[https://jinja.palletsprojects.com/en/stable/templates/][we should read more Jinja, just read documentation, spend 1 hour]]
*** [[https://stackoverflow.com/questions/5458048/how-can-i-make-a-python-script-standalone-executable-to-run-without-any-dependen][pythinstaller -f will create a proper .exe]]
*** [[https://stackoverflow.com/questions/16981805/how-does-templating-engine-work][templating engine pedagogy]]
*** [[https://stackoverflow.com/questions/7460938/how-to-run-a-python-script-in-a-web-page][ways to embed python script in website. But maybe we dont need this.]]
*** [[https://skulpt.org/using.html][skulpt is cheat for running python like its javascript]]
*** [[https://flask.palletsprojects.com/en/stable/][Im not sure why i was reading about Flask]]
*** [[https://starkie.dev/blog/how-a-browser-renders-a-web-page][WRITE: how a website renders page, very informative]]
** Read about web-mode features, haha
*** and alternatives
** Writing about:
*** Write about how you read tech documentation different from stories. 
** Send CVs to at least 2 companies
*** keywords and terminology in the skill section using bullet point.
** First we need to create another class for event, then we need to create a cleanup script
** TODO 
*** we should read about pandas reading null from excel, and validating null from excel
** TODO 
*** your terminal should open with default last directory
** TODO 
*** Look for your reddit history agian, about ELPY + LSP
** TODO 
*** we need to store this as another [[https://www.youtube.com/watch?v=G59BG3VCfio][practical quick release vise]]
** TODO 
*** [[https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Server-side/Django/Models][we REALLY need to read about MODELS before proceeding with Django]]
** TODO 
*** post about why you write in Emacs. a constant in the software world, is bad documentation.
** I read about ketamine, psilocybin and alcohol, and also neurotransmitter GABA
*** https://adf.org.au/drug-facts/ketamine/
*** https://www.psychologytoday.com/intl/blog/culturally-speaking/202312/the-magic-behind-the-molecules-psilocybin-vs-alcohol
*** https://my.clevelandclinic.org/health/articles/22857-gamma-aminobutyric-acid-gaba
**** Researchers are still studying the effects of increased level of GABA, for High blood pressure, Insomnia, Diabetes.
*** GABA presence in food:
****  kimchi, miso and tempeh
**** green, black and oolong tea
**** brown rice, soy and adzuki beans, chestnuts, mushrooms, tomatoes, spinach, broccoli, cabbage, cauliflower, Brussels sprouts, sprouted grains and sweet potatoes
** TODO 
*** think of a way to manipulate clipbaords in openbox
*** make openbox display 
** TODO 
*** Study example uses of defmacro in Emacs
** TODO 
*** add details to linked for [[https://outlier.ai/][Outlier]]
** TODO 
*** Write somewhere about creating swapfile in ubuntu 22 for hibernation, coz with no swap file big enough, cant hibernate.
*** [[https://dev.to/dansteren/ubuntu-2204-hibernate-using-swap-file-1ca1][first]]
*** [[https://www.stefanproell.at/posts/2022-11-01-fde-hibernate/][coz the first forgot to include how to edit the grubfile]]
** TODO 
*** We should store this link somewhere on [[https://www.cosmicpython.com/book/introduction.html][Architecture Patterns with Python]]
** TODO 
*** should you write about Jenkov being the best sources? maybe suggest forums, blogs and communities as better alternatives.
** Write this one somewhere!!
#+begin_src

   RIP Dashboards: 5 Psychology Hacks to Stop Your Work from Dying

You spent weeks building it.
Stakeholders said, “Looks great!”

And then… silence.

❌ No one opens it.
❌ No decisions.
❌ No impact.

Your work deserves to be used.

Here’s how to make sure your insights don't die 👇

1. The Think-Aloud Protocol
🔹 Stop asking, “Is this useful?”—people don’t know. Instead:
🔹 Hand them the dashboard. Let them talk out loud as they explore. 
🔹 Watch where they click, pause, and get stuck — this reveals problems.

💡 Usability expert Jakob Nielsen: 
“Users will never tell you what’s wrong. But they’ll show you.”

2. The IKEA Effect
🔹 Ask early: “What do you think?”
🔹 Show them drafts, not just the final version.
🔹 Let them tweak a few things—it makes them feel ownership.

💡 The more they’re involved, the more they’ll use it.

3. Design Thinking: Build for How They Work (Not What They Ask For)
🔹 Watch how they work today—where’s the friction?
🔹 Prototype early. Refine fast. 
🔹 Don’t spend weeks working on the wrong thing.

💡 If they struggle to use it, it’s not them—it’s the design.

4. Hick’s Law: Simplify or Die
🔹 Cut 20% of elements right now.
🔹 Highlight one key insight they should act on.
🔹 Pre-set defaults instead of making them tweak everything.

💡 Less friction = faster decisions.

5. The “Last Mile” Problem: Put Insights Where They’ll Be Seen
🔹 Push critical insights where people already work (Slack, email, CRM).
🔹 Example: Sales gets an alert when revenue drops below target.
🔹 Meet them where they already work, so data doesn’t get ignored.

💡 Make insights part of their workflow, not an extra step.

In short:
- Make it simple.
- Make them part of the process.
- Make sure it drives action.

Ever built something that no one used? 

Make your insights unforgettable with Data Storytelling. 
Join 4,100+ Data professionals:

  
#+end_src
** TODO 
*** use an AbstractTableModel to make it simple to add data & column as a new table
*** https://coderanch.com/t/335326/java/Dynamic-JTable
** TODO 
*** Where to find small keychain ring
*** contact https://www.mypianomalaysia.com/contact-us/ and mention the piano not being yours, and the possibility. Ask for minimum price, or average price. mention a pin replacement
** [[https://ringgitplus.com/en/blog/income-tax/how-to-file-your-taxes-for-the-first-time.html][read on how to do e-filing for d first time]]
** SO COOL:
*** https://github.com/WingTillDie/adjust-volume/
** wrote a little n Scriabin nocturne
** Read about your Hugo
*** Understand layouts and everything inside (partials, shortcodes, _default)
*** When you replaced your /layouts folder, it fails, simple rename back /_layouts
** contact the fabric guys for your Myanmar project
* Piano (no social media progress)
** You need to buy a stand
* More org notes
** For your recipes
*** Balti
*** some YSAC u did before
*** your chocolate donut (combination of Jamie Olivers friend & Gordon Ramsay)
** For suit, call these numbers for material. (Mention that Sparkle, Lot L-D 1&2, Pudu Plaza, KL recommended these guys)
*** 011 70018033
*** 013 343 2049
*** 018 398 5048
* Tonight:
#+begin_quote



Subject: Response to Domestic Inquiry Intiation
To Whom It May Concern,

I hope this message finds you well. I am writing in response to your email regarding the initiation of domestic inquiry, scheduled for 9:30am 5th March.

I would like to confirm my attendance at the domestic inquiry and assure you that I will be present as requested. I understand the importance of this matter and am fully prepared to provide any necessary information or clarification.

I would like to know if it is possible for Lukman Hakim and Farahin to attend the inquiry as witnesses. I would also like to know the procedure in bringing in a witness, and if am I allowed to call/contact the witness before the inquiry in any way, as well as how early will HR inform the witness. 

Thank you for the opportunity to address this matter, and I look forward to meeting with you.

Sincerely,
Wan Ahmad Ardie





 




#+end_quote
