#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="zoho_ticket.css" />
#+OPTIONS:  toc:nil num:nil ^:nil


* Reminder
** Remember what Chomsky said
*** societies ban certain discussions on purpose to  keep the illusion  of freedom of discussion going. 
*** Most reporters worth their salt, take their job as a mostly a joke. They know the illusion of freedom of speech
*** remember, you made the FUCKING d minor prelude??
* What to do today:
** override modus theme, a masterpiece theme according to 1 guy, into a [[https://github.com/idlip/haki/tree/haki][high contrast theme]]
** Store this [[https://yannesposito.com/posts/0020-cool-looking-org-mode/index.html][cool Emacs link]] somewhere
** Copy Hanifas key
** the details we should memorize by now
*** tournament name
*** start date
*** end date
*** discipline (actual category)
*** type (kinda like scope)
*** eligibility (who can enter)
*** limitation (which rank can enter)
*** rounds
*** time control
*** event category
*** age group
** FB:
*** I know some of you are not particular attached to the idea of writing for your own personal sake. In our world, the code itself is documentation. But I can never help feel childish and selfish when it comes to having something personal to write on. I have a personal diary which I write on my favourite piece of software. I find that it helps even when it comes to small stuff (like installing a piece of software, or creating a new repo). I find that it personally helps me with my personal hobbies too (as I have trouble separating between professional work and passionate side project). What setup do you guys have that helps with dealing with the complexity that comes with this job (and the complexity that comes from dealing with separating professional like and side projects). A diary? A knowledge manage system like Obsidian?
** Write about the concept of traceback and dump() and dump(obj)
** Post on LinkIn, you dontactually need a big project to practice using frameworks. Just start with a very simple selfish, even stupid idea. Many of the modern frameworks we have out there are quite progressive, meaning as long as you have some idea of good code organization, your stupid ( and big and creative) idea can be made gradually better. Dont be intimidated by all the naysayers out there. Or maybe that only happened to me. But frameworks can be applied gradually to your creative idea. So I tried it with the stupid idea of using Excel as a data base using this REPO as a base. It works, I carefully replace with little bits of Flask here and there.
#+begin_quote

You dont actually need to treat web frameworks with fear. I just only learnt this. Modern frameworks are quite progressive in their nature. This means as long as you have some idea of good code organization and abstraction. Your random, stupid, selfish, creative idea can progressively become better with time and patience. 

Thats what progressive means, when you read a few random articles that mentions the specific progressive of these frameworks.  

I experimented with the stupid and suspicious idea of using Excel as a database, and adding frameworks bit by bit, and borrowing code from this repo: 

https://github.com/AnthonyDjogan/Excel-Based-Employee-Management-System_Python-CRUD-Application/blob/main/Employee_Management_CRUD.py

And then progressively organizing and splitting code and CRUD in my own way. It works. Hahaha...

#+end_quote
** readng technical software/programming documentation for beginners requires a balance of conceptual and technical description.
** Read about Python docstring
** you managed to make flas run wathc work. document IMPORTANT
** contact African guy again
** github repo for new emcas.init
*** README
** Code is about simplifying complexity. Emacs is about making my mind simple. Coz I need to love the programming language (LOL), at least eLisp makes me love programming agian
** Facebook:
*** Dont be ashamed to be admit that it takes a long time to learn a certain computer technology/language/framework. Even several years. Computer programming concepts for example are built on top of layers of abstraction. And the more the abstraction, the more mental effort it requires. A beginner Python programmer for example, cant tell the difference between modules and folders. And its useful for him/her to think in terms of physical folders for a long amount of time. We evolved from primates, and our brains havent evolved that much from the understanding of "object permanence".
** Social
*** Use ur existing fiverr clients to improve your stats in other platforms
*** Respond to the Daniel in Developer Kaki
*** Ask the chess guy for possible early fund, coz I kinda need it.
*** ISO for free theaded rod more than 2 feet at least and a few matching nuts
** Python project notes, jot down the folowing:
*** [[https://jinja.palletsprojects.com/en/stable/templates/][we should read more Jinja, just read documentation, spend 1 hour]]
*** [[https://stackoverflow.com/questions/5458048/how-can-i-make-a-python-script-standalone-executable-to-run-without-any-dependen][pythinstaller -f will create a proper .exe]]
*** [[https://stackoverflow.com/questions/16981805/how-does-templating-engine-work][templating engine pedagogy]]
*** [[https://stackoverflow.com/questions/7460938/how-to-run-a-python-script-in-a-web-page][ways to embed python script in website. But maybe we dont need this.]]
*** [[https://skulpt.org/using.html][skulpt is cheat for running python like its javascript]]
*** [[https://flask.palletsprojects.com/en/stable/][Im not sure why i was reading about Flask]]
*** [[https://starkie.dev/blog/how-a-browser-renders-a-web-page][WRITE: how a website renders page, very informative]]
** Read about web-mode features, haha
*** and alternatives
** Writing about:
*** Write about how you read tech documentation different from stories. 
** Send CVs to at least 2 companies
*** keywords and terminology in the skill section using bullet point.
** First we need to create another class for event, then we need to create a cleanup script
** TODO 
*** we should read about pandas reading null from excel, and validating null from excel
** TODO 
*** your terminal should open with default last directory
** TODO 
*** Look for your reddit history agian, about ELPY + LSP
** TODO 
*** we need to store this as another [[https://www.youtube.com/watch?v=G59BG3VCfio][practical quick release vise]]
** TODO 
*** [[https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Server-side/Django/Models][we REALLY need to read about MODELS before proceeding with Django]]
** TODO 
*** post about why you write in Emacs. a constant in the software world, is bad documentation.
** TODO 
*** post about you rewatching The imitation Game
** TODO write inside python.org
*** Notice the repetition of words like details. But notice as well, the mention of index. The nature of traditional html being static/real files, means this is necessary to avoid a hard link between a --> b. This means one can link file a -> b and have the content vary endlessly between a and b
#+begin_src python

  # file urls.py under app /polls
    urlpatterns = [
      path("", views.index, name="index"),
      path("details", views.details, name="details")
  ]


#+end_src
** TODO "view management"
*** I thought I was going to do some impressive class/method-overloading view management, but examples online showed conditional
#+begin_src python

  # in the views.py
  def details(request, id=None):
      if id is None:
	  return HttpResponse("You're looking at the main page")
      else:
	  return HttpResponse("You're looking at question %s" % id)


      
  # inside urlpatterns array []
  path("details/<int:id>/", views.details, name="details")



#+end_src
** I read about ketamine, psilocybin and alcohol, and also neurotransmitter GABA
*** https://adf.org.au/drug-facts/ketamine/
*** https://www.psychologytoday.com/intl/blog/culturally-speaking/202312/the-magic-behind-the-molecules-psilocybin-vs-alcohol
*** https://my.clevelandclinic.org/health/articles/22857-gamma-aminobutyric-acid-gaba
**** Researchers are still studying the effects of increased level of GABA, for High blood pressure, Insomnia, Diabetes.
*** GABA presence in food:
****  kimchi, miso and tempeh
**** green, black and oolong tea
**** brown rice, soy and adzuki beans, chestnuts, mushrooms, tomatoes, spinach, broccoli, cabbage, cauliflower, Brussels sprouts, sprouted grains and sweet potatoes
** TODO 
*** think of a way to manipulate clipbaords in openbox
*** make openbox display 
** TODO 
*** Study example uses of defmacro in Emacs
** TODO 
*** add details to linked for [[https://outlier.ai/][Outlier]]
** TODO 
*** Write somewhere about creating swapfile in ubuntu 22 for hibernation, coz with no swap file big enough, cant hibernate.
*** [[https://dev.to/dansteren/ubuntu-2204-hibernate-using-swap-file-1ca1][first]]
*** [[https://www.stefanproell.at/posts/2022-11-01-fde-hibernate/][coz the first forgot to include how to edit the grubfile]]
** TODO 
*** We should store this link somewhere on [[https://www.cosmicpython.com/book/introduction.html][Architecture Patterns with Python]]
** TODO 
*** should you write about Jenkov being the best sources? maybe suggest forums, blogs and communities as better alternatives.
** Write this one somewhere!!
#+begin_src

   RIP Dashboards: 5 Psychology Hacks to Stop Your Work from Dying

You spent weeks building it.
Stakeholders said, “Looks great!”

And then… silence.

❌ No one opens it.
❌ No decisions.
❌ No impact.

Your work deserves to be used.

Here’s how to make sure your insights don't die 👇

1. The Think-Aloud Protocol
🔹 Stop asking, “Is this useful?”—people don’t know. Instead:
🔹 Hand them the dashboard. Let them talk out loud as they explore. 
🔹 Watch where they click, pause, and get stuck — this reveals problems.

💡 Usability expert Jakob Nielsen: 
“Users will never tell you what’s wrong. But they’ll show you.”

2. The IKEA Effect
🔹 Ask early: “What do you think?”
🔹 Show them drafts, not just the final version.
🔹 Let them tweak a few things—it makes them feel ownership.

💡 The more they’re involved, the more they’ll use it.

3. Design Thinking: Build for How They Work (Not What They Ask For)
🔹 Watch how they work today—where’s the friction?
🔹 Prototype early. Refine fast. 
🔹 Don’t spend weeks working on the wrong thing.

💡 If they struggle to use it, it’s not them—it’s the design.

4. Hick’s Law: Simplify or Die
🔹 Cut 20% of elements right now.
🔹 Highlight one key insight they should act on.
🔹 Pre-set defaults instead of making them tweak everything.

💡 Less friction = faster decisions.

5. The “Last Mile” Problem: Put Insights Where They’ll Be Seen
🔹 Push critical insights where people already work (Slack, email, CRM).
🔹 Example: Sales gets an alert when revenue drops below target.
🔹 Meet them where they already work, so data doesn’t get ignored.

💡 Make insights part of their workflow, not an extra step.

In short:
- Make it simple.
- Make them part of the process.
- Make sure it drives action.

Ever built something that no one used? 

Make your insights unforgettable with Data Storytelling. 
Join 4,100+ Data professionals:

  
#+end_src
** TODO 
*** use an AbstractTableModel to make it simple to add data & column as a new table
*** https://coderanch.com/t/335326/java/Dynamic-JTable
** TODO 
*** Where to find small keychain ring
*** contact https://www.mypianomalaysia.com/contact-us/ and mention the piano not being yours, and the possibility. Ask for minimum price, or average price. mention a pin replacement
** [[https://ringgitplus.com/en/blog/income-tax/how-to-file-your-taxes-for-the-first-time.html][read on how to do e-filing for d first time]]
** SO COOL:
*** https://github.com/WingTillDie/adjust-volume/
** wrote a little n Scriabin nocturne
** Read about your Hugo
*** Understand layouts and everything inside (partials, shortcodes, _default)
*** When you replaced your /layouts folder, it fails, simple rename back /_layouts
** contact the fabric guys for your Myanmar project
* Piano (no social media progress)
** You need to buy a stand
* More org notes
** For your recipes
*** Balti
*** some YSAC u did before
*** your chocolate donut (combination of Jamie Olivers friend & Gordon Ramsay)
** For suit, call these numbers for material. (Mention that Sparkle, Lot L-D 1&2, Pudu Plaza, KL recommended these guys)
*** 011 70018033
*** 013 343 2049
*** 018 398 5048
* Tonight:
#+begin_quote



Subject: Response to Domestic Inquiry Intiation
To Whom It May Concern,

I hope this message finds you well. I am writing in response to your email regarding the initiation of domestic inquiry, scheduled for 9:30am 5th March.

I would like to confirm my attendance at the domestic inquiry and assure you that I will be present as requested. I understand the importance of this matter and am fully prepared to provide any necessary information or clarification.

I would like to know if it is possible for Lukman Hakim and Farahin to attend the inquiry as witnesses. I would also like to know the procedure in bringing in a witness, and if am I allowed to call/contact the witness before the inquiry in any way, as well as how early will HR inform the witness. 

Thank you for the opportunity to address this matter, and I look forward to meeting with you.

Sincerely,
Wan Ahmad Ardie





 




#+end_quote
